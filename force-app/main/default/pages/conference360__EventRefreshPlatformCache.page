<apex:page standardController="conference360__Event__c" extensions="conference360.RefreshPlatformCacheController" tabStyle="conference360__Event__c" sidebar="true" showHeader="true">
	<c:BT_Common />
		<!-- setting max-width here to it doesn't stretch across the entire screen on desktops - this also keeps it looking good for mobile -->
	<apex:outputpanel layout="block" style="max-width:420px;margin:auto;padding:10px;">

		<!-- put in an outer container so we can easily hide everything -->
		<div id="outerContainer" style="padding:0px;">
			<article class="slds-card">
				<div class="slds-card__header slds-grid">
					<header class="slds-media slds-media_center slds-has-flexi-truncate">
						<div class="slds-media__figure">
							<span class="slds-icon_container slds-icon-custom-custom41" title="auth">
								<svg class="slds-icon slds-icon_small" aria-hidden="true">
									<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/custom-sprite/svg/symbols.svg#custom41')}"></use>
								</svg>
								<span class="slds-assistive-text">Publish/Unpublish</span>
							</span>
						</div>
						<div class="slds-media__body">
							<h2 class="slds-card__header-title">
								<apex:outputPanel rendered="{!record['Visible__c']==true}">
									<span>Event is currently published.</span>
								</apex:outputPanel>
								<apex:outputPanel rendered="{!record['Visible__c']!=true}">
									<span>Event is currently unpublished.</span>
								</apex:outputPanel>
							</h2>
						</div>
					</header>
				</div>
				<div class="slds-card__body slds-card__body_inner">
					<br/>
					Publishing an Event makes it visible via the Event Page URL and on all public Event Groups and Lists. If the Event is unpublished, it is only accessible by the Preview URL.
				</div>
				<footer class="slds-card__footer">
					<apex:form id="theForm">
						<apex:inputHidden value="{!errorMessage}" id="errorMessage" />
						<apex:inputHidden value="{!conference360__Event__c.conference360__Visible__c}" />
						<apex:actionFunction name="publishEvent" action="{!doRefreshFactory}" rerender="errorMessage"></apex:actionFunction>
						<apex:actionFunction name="updateVisible" action="{!updateVisible}" rerender="errorMessage" oncomplete="allDone()"></apex:actionFunction>
					</apex:form>
					<apex:outputPanel rendered="{!!error}">
						<button id="actionButton" class="slds-button slds-button--brand slds-not-selected" aria-live="assertive" onclick="refreshPlatformCache()">
							<apex:outputPanel rendered="{!record['Visible__c']==true}">
								<span class="slds-text-not-selected">Unpublish</span>
							</apex:outputPanel>
							<apex:outputPanel rendered="{!record['Visible__c']!=true}">
								<span class="slds-text-not-selected">Publish</span>
							</apex:outputPanel>
						</button>
					</apex:outputPanel>

					<button id="back" class="slds-button slds-button_neutral slds-not-selected" aria-live="assertive" onclick="navigateTo('{!Event__c.Id}')">
						<span class="slds-text-not-selected">Return To Record</span>
					</button>
				</footer>
			</article>
		</div>
	</apex:outputpanel>

	<script>
	window.onload = function() {
		if ({!error}) { // output error from constructor validation if set
			showErrorToast("{!JSENCODE(errorMessage)}");
		}
	};

	function refreshPlatformCache() {
		toggleSpinner(); // show spinner
		publishEvent();

		// this next method is a apex:actionFunction
		// Spliting the DML and callout in to the separate method to avoid this error
		// https://help.salesforce.com/articleView?id=000326129&type=1&mode=1
		updateVisible(); // #1134
	}

	function allDone() {
		toggleSpinner(); // hide spinner
		var errorMessage = document.getElementById('{!$Component.theForm.errorMessage}').value;
		console.log('Do we have a error '+errorMessage);
		if (errorMessage) {
			showErrorToast(errorMessage);
		} else { // success!
			document.getElementById('actionButton').style.display = 'none'; // hide button
			if ({!record['Visible__c']!=true}) {
				showSuccessToast('The event has been published.', '{!Event__c.Id}');
			} else {
				showSuccessToast('The event has been unpublished.', '{!Event__c.Id}');
			}
		}
	}
	</script>
</apex:page>